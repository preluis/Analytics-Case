SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, SUM(ti.amount) as 'Total transfer In', 0 as 'Total Transfer out', SUM(SUM(ti.amount)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) as 'Account Monthly Balance'
FROM transfer_ins ti
JOIN accounts a ON ti.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON ti.transaction_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE ti.status = 'completed' and dy.action_year='2020'
GROUP BY a.customer_id, dm.action_month
ORDER BY dm.action_month;

SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, 0 as 'Total transfer In', sum(tou.amount) as 'Total Transfer out', SUM(-SUM(tou.amount)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) as 'Account Monthly Balance'
FROM transfer_outs tou
JOIN accounts a ON tou.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON tou.transaction_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE tou.status = 'completed' and dy.action_year='2020'
GROUP BY a.customer_id, dm.action_month
ORDER BY dm.action_month;

SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, SUM(SUM(CASE WHEN in_or_out like '%in%' THEN pix_amount ELSE 0 END)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) AS 'Total_transfer_In',
       SUM(SUM(CASE WHEN in_or_out like '%out%' THEN pix_amount ELSE 0 END)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) AS 'Total_Transfer_out', SUM(SUM(CASE WHEN in_or_out like '%in%' THEN pix_amount ELSE 0 END)-SUM(CASE WHEN in_or_out like '%out%' THEN pix_amount ELSE 0 END)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) AS 'Account Monthly Balance'
FROM pix_movements pix
JOIN accounts a ON pix.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON pix.pix_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE pix.status = 'completed' and dy.action_year='2020'
GROUP BY a.customer_id, dm.action_month
ORDER BY dm.action_month;




Solve:

CREATE TABLE BS (
  action_month INT,
  customer_id UUID,
  first_name VARCHAR(128),
  last_name VARCHAR(128),
  total_transfer_in FLOAT,
  total_transfer_out FLOAT,
  account_monthly_balance FLOAT
);

INSERT INTO BS (action_month, customer_id, first_name, last_name, total_transfer_in, total_transfer_out, account_monthly_balance)
SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, SUM(ti.amount) as 'Total transfer In', 0 as 'Total Transfer out', SUM(SUM(ti.amount)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) as 'Account Monthly Balance'
FROM transfer_ins ti
JOIN accounts a ON ti.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON ti.transaction_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE ti.status = 'completed' and dy.action_year='2020'
GROUP BY a.customer_id, dm.action_month
ORDER BY dm.action_month;

INSERT INTO BS (action_month, customer_id, first_name, last_name, total_transfer_in, total_transfer_out, account_monthly_balance)
SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, 0 as 'Total transfer In', sum(tou.amount) as 'Total Transfer out', SUM(-SUM(tou.amount)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) as 'Account Monthly Balance'
FROM transfer_outs tou
JOIN accounts a ON tou.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON tou.transaction_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE tou.status = 'completed' and dy.action_year='2020'
GROUP BY a.customer_id, dm.action_month
ORDER BY dm.action_month;


INSERT INTO BS (action_month, customer_id, first_name, last_name, total_transfer_in, total_transfer_out, account_monthly_balance)
SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, SUM(SUM(CASE WHEN in_or_out like '%in%' THEN pix_amount ELSE 0 END)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) AS 'Total_transfer_In',
       SUM(SUM(CASE WHEN in_or_out like '%out%' THEN pix_amount ELSE 0 END)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) AS 'Total_Transfer_out', SUM(SUM(CASE WHEN in_or_out like '%in%' THEN pix_amount ELSE 0 END)-SUM(CASE WHEN in_or_out like '%out%' THEN pix_amount ELSE 0 END)) OVER (PARTITION BY a.customer_id ORDER BY dm.action_month) AS 'Account Monthly Balance'
FROM pix_movements pix
JOIN accounts a ON pix.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON pix.pix_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE pix.status = 'completed' and dy.action_year='2020'
GROUP BY a.customer_id, dm.action_month
ORDER BY dm.action_month;

SELECT * FROM BS
WHERE first_name='Louis'
GROUP BY customer_id, action_month
ORDER BY action_month;


______________________________________________

DROP TABLE BS;

CREATE TABLE BS (
  action_month INT,
  customer_id UUID,
  first_name VARCHAR(128),
  last_name VARCHAR(128),
  transfer_in FLOAT,
  transfer_out FLOAT
);

INSERT INTO BS (action_month, customer_id, first_name, last_name, transfer_in, transfer_out)
SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, ti.amount, 0 
FROM transfer_ins ti
JOIN accounts a ON ti.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON ti.transaction_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE ti.status = 'completed' and dy.action_year='2020';

INSERT INTO BS (action_month, customer_id, first_name, last_name, transfer_in, transfer_out)
SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, 0 , tou.amount
FROM transfer_outs tou
JOIN accounts a ON tou.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON tou.transaction_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE tou.status = 'completed' and dy.action_year='2020';

INSERT INTO BS (action_month, customer_id, first_name, last_name, transfer_in, transfer_out)
SELECT dm.action_month, a.customer_id, c.first_name, c.last_name, CASE WHEN in_or_out like '%in%' THEN pix_amount ELSE 0 END, CASE WHEN in_or_out like '%out%' THEN pix_amount ELSE 0 END 
FROM pix_movements pix
JOIN accounts a ON pix.account_id = a.account_id
JOIN customers c ON a.customer_id = c.customer_id
JOIN d_time dt ON pix.pix_completed_at = dt.time_id
JOIN d_month dm on dt.month_id = dm.month_id
JOIN d_year dy on dt.year_id = dy.year_id
WHERE pix.status = 'completed' and dy.action_year='2020';


SELECT action_month, customer_id, first_name, last_name, SUM(transfer_in) as 'Total Transfer In', SUM(transfer_out) as 'Total Transfer out', SUM(SUM(transfer_in)-SUM(transfer_out)) OVER (PARTITION BY customer_id ORDER BY action_month) AS 'Account Monthly Balance' 
FROM BS
GROUP BY customer_id, action_month
ORDER BY action_month;